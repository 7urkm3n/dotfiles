source "$HOME/Documents/Projects/dotfiles/linux/.env_loads"
source "$HOME/Documents/Projects/dotfiles/linux/.db_commands"
source "$HOME/Documents/Projects/dotfiles/linux/.git_commands"

### Emailing
# export SMTP_USER=""
# export SMTP_PASSWORD=""
# export SMTP_ADDRESS=""

alias brewery='brew update && brew upgrade && brew cleanup'
alias vs=code # Visual Studio

#========================= Functions ==================================
weather(){
	city=$1
	metrics=$2
	if [[ $city = 'c' ]]; then
		curl "https://wttr.in?m"
	elif [[ $metrics = 'c' ]]; then
		curl "https://wttr.in/$city?m"
	elif [[ $city ]]; then
		curl "https://wttr.in/$city"
	else
		curl https://wttr.in
	fi
}

reload(){
	echo "Reloading bash profile...!"
	. ~/.profile
	echo "Reloaded!"
}

.profile_push(){
	path=$HOME/Documents/Projects/dotfiles
	# cp ~/.profile $path/linux
	git -C $path add .
	git -C $path commit -m ...
	git -C $path push
	cp $path/linux/.profile ~/.profile
	reload!
	echo $txtcyn "Profile - Pushed to Github"
}

# .profile_pull uses github to pull last master commit
.profile_pull(){
	path=$HOME/Documents/Projects/dotfiles
	git -C $path pull origin master
	cp $path/linux/.profile ~/.profile
	reload!
	echo $txtcyn "Profile - Pulled from Github"
}

shell(){
	echo $SHELL
}

# function gobash(){
# 	chsh -s $(which bash)
# }

# function gozsh(){
# 	chsh -s $(which zsh)
# }


## delete file in a current folder
delete_x(){
	# find "$(pwd)" -name '*.' -type f -delete
	echo "$(pwd)"
    find . -name ".*" -print

	# Use this to delete recursive
	# find . -name ".*" -delete

	# Dnt use it!
	# find . -name "*.crdownload" -print
	# find . -name "*.*" -print
}

delete_dsstores(){
	sudo find . -name '*.DS_Store' -type f -delete
	#alias dsstore="sudo find . -name '*.DS_Store' -type f -delete"
	#alias deletee="find `pwd` -name '*.' -type f -delete"
}
#===================================================================================

#========================= Auto Complete Terminal ==================================
# TAB: menu-complete
set completion-ignore-case on
set show-all-if-ambiguous on

# Git auto complete
# brew install git && brew install bash-completion
# if [ -f $(brew --prefix)/etc/bash_completion ]; then
# . $(brew --prefix)/etc/bash_completion
# fi
#===================================================================================

#========================= RUBY AND RUBY on RAILS ==================================
# Rails Server
lvh(){
	if [[ $1 ]]; then
		port=$1
	else
		port="3000"
	fi

	echo "Rails Server Runs at port:" $port
	
	if ! [ -x "$(command -v foreman)" ]; then
	  echo "Foreman wasn't installed, Instaling foreman ..."
	  gem install foreman
	fi

	# rails s -p $port -b lvh.me
	foreman start -f ./Procfile.development -p $port
}
alias lvhp='SECRET_KEY_BASE=xxx RAILS_ENV=production RAILS_SERVE_STATIC_FILES=true rails s -p 3000 -b lvh.me'
alias lvhpp='SECRET_KEY_BASE=xxx RAILS_ENV=production rails s -p 3000'
alias lvh_certificate="rails s -b 'ssl://lvh.me:3000?key=localhost.key&cert=localhost.crt'"
alias compile_assets_production='RAILS_ENV=production SECRET_KEY_BASE=xxx RAILS_SERVE_STATIC_FILES=true rake assets:precompile'
# alias puma_lvh='puma -b tcp://lvh.me:3000'
# alias lvh='rails s -p 3000 -b lvh.me'
# alias lvh='rvmsudo rails server -p 80 -b 0.0.0.0'

# Ruby - Rspec
# alias r='rspec'
# alias cr='clear; rspec'
#===================================================================================

#================================ Local commands ====================================
# Local commands
alias p='cd ~/Documents/Projects/'
alias mnt='cd /mnt/c/Users/rgurd/OneDrive/Documents/Projects'
alias d1='cd /Volumes/Main\ disk'
alias lla='ls -la -G'
alias la='ls -a -G'
alias l='ls -G'
#===================================================================================
